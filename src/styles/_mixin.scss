@import "./variables";

@mixin media($size, $hasInterval) {
    @if ($size == "XXS") {
        @media (max-width: $ultra-small) {
            @content;
        }
    } @else if ($size == "XS") {
        @if ($hasInterval) {
            @media (max-width: $extra-small) and (min-width: ($ultra-small + 1)) {
                @content;
            }
        } @else {
            @media (max-width: $extra-small) {
                @content;
            }
        }
    } @else if ($size == "S") {
        @if ($hasInterval) {
            @media (max-width: $small) and (min-width: ($extra-small + 1)) {
                @content;
            }
        } @else {
            @media (max-width: $small) {
                @content;
            }
        }
    } @else if ($size == "M") {
        @if ($hasInterval) {
            @media (max-width: $medium) and (min-width: ($small + 1)) {
                @content;
            }
        } @else {
            @media (max-width: $medium) {
                @content;
            }
        }
    } @else if ($size == "L") {
        @if ($hasInterval) {
            @media (max-width: $large) and (min-width: ($medium + 1)) {
                @content;
            }
        } @else {
            @media (max-width: $large) {
                @content;
            }
        }
    } @else if ($size == "XL") {
        @media (min-width: ($large - 1)) {
            @content;
        }
    }
}

@mixin textStyles($fontSize, $fontWeight, $color) {
    font-size: $fontSize;
    font-weight: $fontWeight;
    color: $color;
    @content;
}

@mixin flexBox($flexDir, $justifyContent, $alignItems, $gap) {
    display: flex;
    flex-direction: $flexDir;
    justify-content: $justifyContent;
    align-items: $alignItems;
    gap: $gap;
    @content;
}

@mixin gridCss($template-columns , $template-rows , $column-gap , $row-gap) {
    display: grid;
    grid-template-columns: $template-columns;
    grid-template-rows: $template-rows;
    grid-column-gap: $column-gap;
    grid-row-gap: $row-gap;
    @content;
}

@mixin boxModel($width, $height, $padding, $margin, $bgColor) {
    width: $width;
    height: $height;
    padding: $padding;
    margin: $margin;
    background-color: $bgColor;
    @content;
}

@mixin registerField($forPlaceholder, $borderColor, $color) {
    @if ($forPlaceholder) {
        color: $color;
    } @else {
        height: 38px;
        padding: 0 8px;
        font-size: 1rem;
        outline: none;
        background-color: transparent;
        border: 1px solid $borderColor;
        border-radius: 10px;
        color: $color;
    }
}

@mixin fieldErrorMessage($bottom) {
    position: absolute;
    bottom: $bottom;
    margin-right: 4px;
    font-size: 0.7rem;
    color: $red-500;
    opacity: 0;
}

@mixin commonButton($width, $height, $fontSize, $color, $bgColor) {
    display: flex;
    align-items: center;
    gap: 5px;
    justify-content: center;
    width: $width;
    height: $height;
    font-size: $fontSize;
    outline: none;
    border: none;
    cursor: pointer;
    border-radius: 8px;
    color: $color;
    background-color: $bgColor;
    @content;
}
